from collections import Counter
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def find(x):
            if x != parent[x]:
                parent[x] = find(parent[x])
            return parent[x]

        def union(x, y):
            rootX = find(x)
            rootY = find(y)
            if rootX != rootY:
                parent[rootX] = rootY

        n = len(graph)
        parent = [i for i in range(n)]
        for i in range(n):
            for j in range(i + 1, n):
                if graph[i][j] == 1:
                    union(i, j)

        mal_counts = Counter([find(i) for i in initial])
        counts = Counter([find(i) for i in range(n)])
        affected, res = 0, min(initial)
        for i in initial:
            if mal_counts[find(i)] == 1:
                if counts[find(i)] > affected:
                    res, affected = i, counts[find(i)]
                if counts[find(i)] == affected:
                    res = min(res, i)
        return res